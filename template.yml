AWSTemplateFormatVersion: "2010-09-09"
Description: SAM Template for fetch function

Parameters:
  ProjectSource:
    Type: String
    Default: "https://github.com/rickiesmooth/website.git"
    Description: "Source control URL (e.g. Github)"
  GithubOwner:
    Type: String
    Default: rickiesmooth
  GithubRepo:
    Type: String
    Default: website
  GithubOAuthToken:
    Type: String
    Description: "Github personal access token"
  RecordSetDomainName:
    Type: String
    Description: "Domain name traffic should be routed to"
  HostedZoneID:
    Type: String
    Description: "Hosted zone id domain is part of"
  EnvType:
    Description: Environment type.
    Default: test
    Type: String
    AllowedValues:
      - prod
      - test
    ConstraintDescription: must specify prod, or test.
  CertificateArn:
    Type: String
Conditions:
  IsDev: !Equals [!Ref EnvType, test]
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ["", [!GetAtt PipelineBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt DeployBucket.Arn
                  - !Join ["", [!GetAtt DeployBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                  - "lambda:*"
                  - "apigateway:*"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                  - "iam:GetRole"
                  - "iam:CreateRole"
                  - "iam:AttachRolePolicy"
                  - "iam:DetachRolePolicy"
                  - "iam:PassRole"
                  - "iam:DeleteRole"
                  - "s3:DeleteObject"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                Resource:
                  - "*"
  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: no_artifacts
      Source:
        Type: GITHUB
        BuildSpec: !If
          - IsDev
          - buildspec.dev.yml
          - buildspec.yml
        Auth:
          Type: OAUTH
        Location: !Ref ProjectSource
        ReportBuildStatus: true
      Triggers: !If
        - IsDev
        - Webhook: true
          FilterGroups:
            - - Type: EVENT
                Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED
              - Type: HEAD_REF
                Pattern: ^refs/tags/.*
                ExcludeMatchedPattern: true
              - Type: BASE_REF
                Pattern: ^refs/tags/.*
                ExcludeMatchedPattern: true
        - Webhook: true
          FilterGroups:
            - - Type: EVENT
                Pattern: PULL_REQUEST_MERGED
              - Type: BASE_REF
                Pattern: ^refs/heads/master$
                ExcludeMatchedPattern: false
              - Type: HEAD_REF
                Pattern: ^refs/tags/.*
                ExcludeMatchedPattern: true
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:1.0"
        EnvironmentVariables:
          - Name: GITHUB_TOKEN
            Value: !Ref GithubOAuthToken
            Type: PLAINTEXT
          - Name: PIPELINE_BUCKET
            Value: !Ref PipelineBucket
            Type: PLAINTEXT
          - Name: DEPLOY_BUCKET
            Value: !Ref DeployBucket
            Type: PLAINTEXT
          - Name: DISTRIBUTION_ID
            Value: !Ref Distribution
            Type: PLAINTEXT
          - Name: PARENT_STACK_NAME
            Value: !Sub ${AWS::StackName}
            Type: PLAINTEXT
  PipelineBucket:
    Type: "AWS::S3::Bucket"
    Properties: {}
  DeployBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt DeployBucket.DomainName
            Id: !Ref DeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultRootObject: index.html
        Enabled: true
        Aliases:
          - !Ref RecordSetDomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: "sni-only"
        DefaultCacheBehavior:
          MinTTL: 86400
          MaxTTL: 31536000
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref DeployBucket
          ViewerProtocolPolicy: "redirect-to-https"
  DistributionAlias:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneID
      RecordSets:
        - Name: !Ref RecordSetDomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt Distribution.DomainName
  ApiGatewayAlias:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneID
      RecordSets:
        - Name: !Join ["", ["api.", !Ref RecordSetDomainName]]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt ApiGatewayDomainName.DistributionHostedZoneId
            DNSName: !GetAtt ApiGatewayDomainName.DistributionDomainName
  ApiGatewayDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !Join ["", ["api.", !Ref RecordSetDomainName]]
      EndpointConfiguration:
        Types:
          - EDGE
Outputs:
  DomainName:
    Description: The Domain name
    Value: !Join ["", ["api.", !Ref RecordSetDomainName]]
    Export:
      Name: !Sub ${AWS::StackName}-DomainName
